<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>Prof. Frank Dehne</title>


  

  
  
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"></head><body style="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);" alink="#000000" link="#000000" vlink="#000000">
<table border="0" width="100%">

  <tbody>
    <tr>
      <td height="27" width="45%">
      <h2>COMP 5704: Parallel Algorithms and Applications in Data Science<br>
</h2>
      </td>
      <td height="27" width="10%">
      <p><br>
      </p>
      </td>
      <td height="27" width="45%">
      <p><b>School of Computer Science</b><br>
      <b>Carleton University, Ottawa, Canada</b></p>
      </td>
    </tr>
  </tbody>
</table>

<hr noshade="noshade">
<h2><font color="#005128">Project Title: </font><font><font color="#005128">Parallel String Matching</font></font></h2>

<h2><font><font color="#005128">Name: Dengyu Liang</font></font></h2>

<h2><font><font color="#005128">E-Mail: dengyuliang@cmail.carleton.ca</font></font></h2>



<hr noshade="noshade">
<b><font color="#005128">Project Outline:</font></b> String Matching is one of the most common problems in computer science, 
and although Single-pattern algorithms work very well on this problem, the algorithm speed is affected by the linear increase in the size of the matching string, 
especially when solving Bioinformatics and DNA Sequencing or Search engines or content search in large databases, 
a large amount of data inevitably takes a lot of time. And because of the search method of String Matching, 
it can take full advantage of Parallel Programming to solve large-scale Matching problems efficiently on large-scale systems.
<p>Tthis project is to explore the parallel implementation of traditional string matching algorithms 
and implement some efficient parallel string matching algorithms, as well as compare the optimization methods of string matching algorithms 
for different parallel architectures. Through this project, I will implement one or more string matching algorithms, 
at least one efficient version and their multiple-core and Cuda versions, and analyze the focus of parallel algorithms under different architectures.
In the process of implementation, understand the method of implementing algorithm parallelism. 
And understand the impact and improvement of algorithm parallelism through the analysis of experimental results.</p>
<p><b><font color="#005128">Startup Paper(s):
<a href="https://link.springer.com/chapter/10.1007/978-3-319-58943-5_15">Parallel String Matching</font></a>
<p><b><font color="#005128">Deliverables:</font></b></p>

<ul>

  <li>
    <div align="left"><a href="Literature_Review.pdf"><font color="#000000">Literature Review</font></a> </div>
  </li>
  <li>
    <div align="left"><a href="Presentation_Outline.pdf"><font color="#000000">Presentation Outline</font></a> </div>
  </li>
  <li>
    <div align="left"> <a href="Final_Presentation.pptx"><font color="#000000">Slide Presentation</font></a> </div>
  </li>
  <li>
    <div align="left"><a href="Final_Paper.pdf"><font color="#000000">Final
Paper</font></a> </div>
  </li>
  <li><a href="https://github.com/dengyull/COMP5704-project/tree/main/Code_and_Data"><font color="#000000">Code and Data</font></a>
</li>
</ul>

<p><b><font color="#005128">Relevant References:</font></b></p>

<ul>

  <li>Zvi Galil*. 1984. Optimal parallel algorithms for string matching. In Proceedings of the sixteenth annual ACM symposium on Theory of computing (STOC '84). Association for Computing Machinery, New York, NY, USA, 240-248. https://doi.org/10.1145/800057.808687</li>
  <li>Pfaffe, Philip & Tillmann, Martin & Lutteropp, Sarah & Scheirle, Bernhard & Zerr, Kevin. (2016). Parallel String Matching. 10.1007/978-3-319-58943-5_15. https://rdcu.be/cWcwf</li>
  <li>C. -L. Hung, T. -H. Hsu, H. -H. Wang and C. -Y. Lin, "A GPU-based Bit-Parallel Multiple Pattern Matching Algorithm," 2018 IEEE 20th International Conference on High Performance Computing and Communications; IEEE 16th International Conference on Smart City; IEEE 4th International Conference on Data Science and Systems (HPCC/SmartCity/DSS), 2018, pp. 1219-1222, doi: 10.1109/HPCC/SmartCity/DSS.2018.00205.</li>
</ul>

</body></html>